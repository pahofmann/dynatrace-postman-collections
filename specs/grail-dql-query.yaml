{"item":[{"id":"2b9ac11d-7f2c-4e8b-9577-9fa786d2b664","name":"Retrieves query status and final result from Grail.","request":{"name":"Retrieves query status and final result from Grail.","description":{"content":"For information about the required permissions see the [Bucket and table permissions in Grail documentation](https://docs.dynatrace.com/docs/shortlink/assign-bucket-table-permissions). \n\n### Overview:\n\nPolls the status of a Grail query. Returns the status of the query, including the result if the query finished.\n\n### The response format:\nThe json response will contain the state of the query. If the query succeeded, the result will be included.\n\nThe result has two main sections:\n* The 'records' section contains the individual records, where each record consists of a set of fields and their corresponding values.\n* The 'types' section describes the corresponding data types that a record field has.\n\nEvery record has an implicit 'index' according to the position in the 'records' JSON array.\nThe types section has a list of 1..N possible type 'buckets'. Each such bucket has an 'indexRange' which indicates which\nrecords will find their field types in which bucket. The index range has two values start & end and can be thought of as [startIndex, endIndex).\n\nA field part of a record with index 'i' will find its corresponding field type by first locating the bucket that satisfies:\n\n```text\nstartIndex <= i <= endIndex\n```\n\nOnce the bucket is found the 'mappings' object has an entry for all the fields that are part of that record with index 'i'.\n\n\nSince enforcement of a particular schema is absent at ingestion time, it is possible to have records that share the same\nfield name but their values are of a different type. This phenomenon will hence forth be named as a **\"collision\"**.\nWhen a collision does occur, we will create a new type 'bucket' that will have a different index range where\nthe new record field types will be placed.\nIt is guaranteed that every field of every record will have a corresponding type.\n**Clients should always take the included types into account when consuming records!**","type":"text/plain"},"url":{"path":["query:poll"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"request-token","value":"<string>","description":"(Required) The request-token of the query."},{"disabled":false,"key":"request-timeout-milliseconds","value":"<long>","description":"The time a client is willing to wait for the query result. In case the query finishes within the specified timeout, the query result is returned. Otherwise, the query status is returned."},{"disabled":false,"key":"enrich","value":"<string>","description":"If set additional data will be available in the metadata section."}],"variable":[]},"header":[{"key":"Accept","value":"application/json"}],"method":"GET","auth":{"type":"oauth2","oauth2":[{"key":"scope","value":"storage:events:read storage:logs:read storage:metrics:read storage:bizevents:read storage:spans:read storage:system:read storage:entities:read storage:buckets:read storage:fieldsets:read"},{"key":"accessTokenUrl","value":"https://sso.dynatrace.com/sso/oauth2/token"},{"key":"grant_type","value":"client_credentials"}]}},"response":[{"id":"e33e4444-6aa2-46a3-af74-a99f259164af","name":"The current status and results of the supplied query.","originalRequest":{"url":{"path":["query:poll"],"host":["{{baseUrl}}"],"query":[{"key":"request-token","value":"HKsGJwblS6mSwDn0WbzSsQ=="},{"key":"request-timeout-milliseconds","value":"<long>"},{"key":"enrich","value":"metric-metadata"}],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"state\": \"RUNNING\",\n  \"progress\": 50,\n  \"ttlSeconds\": 123\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"79abdf29-c85b-4e0c-8915-bba19c4e8ea9","name":"The supplied request is wrong. Either the query itself or other parameters are wrong.","originalRequest":{"url":{"path":["query:poll"],"host":["{{baseUrl}}"],"query":[{"key":"request-token","value":"HKsGJwblS6mSwDn0WbzSsQ=="},{"key":"request-timeout-milliseconds","value":"<long>"},{"key":"enrich","value":"metric-metadata"}],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"GET","body":{}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"error\": {\n    \"code\": 400,\n    \"message\": \"UNKNOWN_RECORD_TYPE\",\n    \"details\": {\n      \"exceptionType\": \"DQL-RESULT_TYPE\",\n      \"errorType\": \"UNKNOWN_RECORD_TYPE\",\n      \"errorMessage\": \"Unknown record type: sandwich.\",\n      \"errorMessageFormat\": \"Unknown record type: %s.\",\n      \"errorMessageFormatSpecifierTypes\": [\n        \"RESULT_TYPE\"\n      ],\n      \"arguments\": [\n        \"sandwich\"\n      ],\n      \"queryString\": \"fetch sandwich\",\n      \"syntaxErrorPosition\": {\n        \"start\": {\n          \"index\": 6,\n          \"line\": 1,\n          \"column\": 7\n        },\n        \"end\": {\n          \"index\": 14,\n          \"line\": 1,\n          \"column\": 15\n        }\n      }\n    }\n  }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"a216d39f-11c3-428e-a27c-31a61364fe5f","name":"The query for the given request-token is not available anymore.","originalRequest":{"url":{"path":["query:poll"],"host":["{{baseUrl}}"],"query":[{"key":"request-token","value":"HKsGJwblS6mSwDn0WbzSsQ=="},{"key":"request-timeout-milliseconds","value":"<long>"},{"key":"enrich","value":"metric-metadata"}],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"GET","body":{}},"status":"Gone","code":410,"header":[{"key":"Content-Type","value":"text/plain"}],"body":"","cookie":[],"_postman_previewlanguage":"text"},{"id":"72c76a42-7781-4d8f-a907-58d6a060adae","name":"An internal server error has occurred.","originalRequest":{"url":{"path":["query:poll"],"host":["{{baseUrl}}"],"query":[{"key":"request-token","value":"HKsGJwblS6mSwDn0WbzSsQ=="},{"key":"request-timeout-milliseconds","value":"<long>"},{"key":"enrich","value":"metric-metadata"}],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"GET","body":{}},"status":"Internal Server Error","code":500,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"error\": {\n    \"code\": 500,\n    \"message\": \"EXECUTION_FAILURE\",\n    \"details\": {\n      \"exceptionType\": \"DQL-EXECUTION\",\n      \"errorType\": \"EXECUTION_FAILURE\",\n      \"errorMessage\": \"NullPointerException\",\n      \"errorMessageFormat\": \"\",\n      \"errorMessageFormatSpecifierTypes\": [],\n      \"arguments\": [],\n      \"queryString\": \"\"\n    }\n  }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[],"protocolProfileBehavior":{"disableBodyPruning":true}},{"id":"8a7613e0-7b77-4274-aeb5-6f56cf3cf83d","name":"Starts a Grail query.","request":{"name":"Starts a Grail query.","description":{"content":"For information about the required permissions see the [Bucket and table permissions in Grail documentation](https://docs.dynatrace.com/docs/shortlink/assign-bucket-table-permissions). \n\n### Overview:\n\nExecutes a query and returns a list of records.\n\nFor details about the query language see the [Dynatrace Query Language documentation](https://dt-url.net/bv03yk8).\n\n### The response format:\n\nThe json response will contain the state of the started query. If the query succeeded, the result will be included. Otherwise the response will contain a request token to reference the query in future polling requests.\n\nThe result has two main sections:\n* The 'records' section contains the individual records, where each record consists of a set of fields and their corresponding values.\n* The 'types' section describes the corresponding data types that a record field has.\n\nEvery record has an implicit 'index' according to the position in the 'records' JSON array.\nThe types section has a list of 1..N possible type 'buckets'. Each such bucket has an 'indexRange' which indicates which\nrecords will find their field types in which bucket. The index range has two values start & end and can be thought of as [startIndex, endIndex).\n\nA field part of a record with index 'i' will find its corresponding field type by first locating the bucket that satisfies:\n\n```text\nstartIndex <= i <= endIndex\n```\n\nOnce the bucket is found the 'mappings' object has an entry for all the fields that are part of that record with index 'i'.\n\n\nSince enforcement of a particular schema is absent at ingestion time, it is possible to have records that share the same\nfield name but their values are of a different type. This phenomenon will hence forth be named as a **\"collision\"**.\nWhen a collision does occur, we will create a new type 'bucket' that will have a different index range where\nthe new record field types will be placed.\nIt is guaranteed that every field of every record will have a corresponding type.\n**Clients should always take the included types into account when consuming records!**","type":"text/plain"},"url":{"path":["query:execute"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"enrich","value":"<string>","description":"If set additional data will be available in the metadata section."}],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"method":"POST","auth":{"type":"oauth2","oauth2":[{"key":"scope","value":"storage:events:read storage:logs:read storage:metrics:read storage:bizevents:read storage:spans:read storage:system:read storage:entities:read storage:buckets:read storage:fieldsets:read"},{"key":"accessTokenUrl","value":"https://sso.dynatrace.com/sso/oauth2/token"},{"key":"grant_type","value":"client_credentials"}]},"body":{"mode":"raw","raw":"{\n  \"query\": \"<string>\",\n  \"defaultTimeframeStart\": \"<string>\",\n  \"defaultTimeframeEnd\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"locale\": \"<string>\",\n  \"maxResultRecords\": \"<long>\",\n  \"maxResultBytes\": \"<long>\",\n  \"fetchTimeoutSeconds\": \"<integer>\",\n  \"requestTimeoutMilliseconds\": \"<long>\",\n  \"enablePreview\": \"<boolean>\",\n  \"defaultSamplingRatio\": \"<double>\",\n  \"defaultScanLimitGbytes\": \"<integer>\",\n  \"queryOptions\": {\n    \"Duisf\": \"<string>\",\n    \"sit_4\": \"<string>\",\n    \"aliqua441\": \"<string>\",\n    \"ametc\": \"<string>\",\n    \"sunt___8\": \"<string>\",\n    \"nostrud_b49\": \"<string>\",\n    \"adipisicing_387\": \"<string>\",\n    \"in9\": \"<string>\",\n    \"aliquip48\": \"<string>\",\n    \"commodo45\": \"<string>\",\n    \"ipsum__\": \"<string>\",\n    \"voluptate_a\": \"<string>\",\n    \"deserunt_06\": \"<string>\",\n    \"pariatur6d5\": \"<string>\",\n    \"aliquip90\": \"<string>\",\n    \"ind\": \"<string>\",\n    \"dolore_9e\": \"<string>\",\n    \"commododf\": \"<string>\",\n    \"veniame\": \"<string>\",\n    \"pariatur_5\": \"<string>\",\n    \"ipsum_6f\": \"<string>\",\n    \"anim_93\": \"<string>\",\n    \"dolore5da\": \"<string>\",\n    \"dolor872\": \"<string>\",\n    \"dolored\": \"<string>\",\n    \"sed_d8\": \"<string>\",\n    \"in_8\": \"<string>\",\n    \"laborisba2\": \"<string>\",\n    \"dolore59a\": \"<string>\"\n  },\n  \"filterSegments\": [\n    {\n      \"id\": \"<string>\",\n      \"variables\": [\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"variables\": [\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}","options":{"raw":{"language":"json"}}}},"response":[{"id":"697e7e37-b93c-453b-96f6-a2a6c25cccd1","name":"The final status and results of the supplied query if it finished within a supplied requestTimeoutMilliseconds.","originalRequest":{"url":{"path":["query:execute"],"host":["{{baseUrl}}"],"query":[{"key":"enrich","value":"metric-metadata"}],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{"mode":"raw","raw":"{\n  \"query\": \"fetch events \\n| filter event.type == \\\"davis\\\" AND davis.status != \\\"CLOSED\\\" \\n| fields timestamp, davis.title, davis.underMaintenance, davis.status \\n| sort timestamp \\n| limit 10\",\n  \"defaultTimeframeStart\": \"2022-04-20T12:10:04.123Z\",\n  \"defaultTimeframeEnd\": \"2022-04-20T13:10:04.123Z\",\n  \"timezone\": \"UTC\",\n  \"locale\": \"en_US\",\n  \"maxResultRecords\": 1000,\n  \"maxResultBytes\": 1000000,\n  \"fetchTimeoutSeconds\": 60,\n  \"requestTimeoutMilliseconds\": 1000,\n  \"enablePreview\": true,\n  \"defaultSamplingRatio\": 1000,\n  \"defaultScanLimitGbytes\": 100,\n  \"queryOptions\": {\n    \"minim__75\": \"<string>\",\n    \"qui_9cc\": \"<string>\",\n    \"velit_0_d\": \"<string>\",\n    \"veniam20_\": \"<string>\",\n    \"cupidatat_4f_\": \"<string>\",\n    \"id_0\": \"<string>\",\n    \"deserunt_01\": \"<string>\",\n    \"sint0\": \"<string>\",\n    \"laborum8b\": \"<string>\",\n    \"idc65\": \"<string>\",\n    \"dolora\": \"<string>\",\n    \"dolore426\": \"<string>\",\n    \"labore_a1b\": \"<string>\",\n    \"Ut_917\": \"<string>\",\n    \"elit_78e\": \"<string>\",\n    \"tempord9\": \"<string>\",\n    \"officia_a98\": \"<string>\",\n    \"dolore47e\": \"<string>\",\n    \"culpaae\": \"<string>\",\n    \"magna__\": \"<string>\",\n    \"reprehenderit_31\": \"<string>\",\n    \"culpa_008\": \"<string>\",\n    \"minim_4\": \"<string>\",\n    \"veniam423\": \"<string>\",\n    \"dolor_\": \"<string>\",\n    \"do61\": \"<string>\",\n    \"id_a3\": \"<string>\",\n    \"Duis1\": \"<string>\",\n    \"dolore9b_\": \"<string>\",\n    \"ipsum_3\": \"<string>\"\n  },\n  \"filterSegments\": [\n    {\n      \"id\": \"<string>\",\n      \"variables\": [\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"variables\": [\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"state\": \"SUCCEEDED\",\n  \"progress\": 100,\n  \"result\": {\n    \"records\": [\n      {\n        \"timestamp\": \"2022-03-17T08:00:01.231000000Z\",\n        \"davis.title\": \"Http monitor global outage\",\n        \"davis.underMaintenance\": \"false\",\n        \"davis.status\": \"OPEN\"\n      },\n      {\n        \"timestamp\": \"2022-03-17T08:00:01.231000000Z\",\n        \"davis.title\": \"Http monitor global outage\",\n        \"davis.underMaintenance\": \"false\",\n        \"davis.status\": \"OPEN\"\n      },\n      {\n        \"timestamp\": \"2022-03-17T08:00:01.231000000Z\",\n        \"davis.title\": \"Http monitor global outage\",\n        \"davis.underMaintenance\": \"false\",\n        \"davis.status\": \"OPEN\"\n      },\n      {\n        \"timestamp\": \"2022-03-17T08:00:01.231000000Z\",\n        \"davis.title\": \"Http monitor global outage\",\n        \"davis.underMaintenance\": \"false\",\n        \"davis.status\": \"OPEN\"\n      }\n    ],\n    \"types\": [\n      {\n        \"indexRange\": [\n          0,\n          3\n        ],\n        \"mappings\": {\n          \"timestamp\": {\n            \"type\": \"timestamp\"\n          },\n          \"davis.title\": {\n            \"type\": \"string\"\n          },\n          \"davis.underMaintenance\": {\n            \"type\": \"string\"\n          },\n          \"davis.status\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    ]\n  },\n  \"metadata\": {\n    \"grail\": {\n      \"queryId\": \"92918dae-c2f9-4c98-b278-dc42adcc5954\",\n      \"query\": \"fetch ...\",\n      \"dqlVersion\": \"V1_0\",\n      \"analysisTimeframe\": {\n        \"start\": \"2023-03-10T09:02:00.705980000Z\",\n        \"end\": \"2023-03-10T11:02:00.705980000Z\"\n      },\n      \"timezone\": \"Z\",\n      \"locale\": \"\",\n      \"executionTimeMilliseconds\": 18\n    }\n  }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"c189e646-02e2-4cf5-acac-aac009321379","name":"The status of the query to start.","originalRequest":{"url":{"path":["query:execute"],"host":["{{baseUrl}}"],"query":[{"key":"enrich","value":"metric-metadata"}],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{"mode":"raw","raw":"{\n  \"query\": \"fetch events \\n| filter event.type == \\\"davis\\\" AND davis.status != \\\"CLOSED\\\" \\n| fields timestamp, davis.title, davis.underMaintenance, davis.status \\n| sort timestamp \\n| limit 10\",\n  \"defaultTimeframeStart\": \"2022-04-20T12:10:04.123Z\",\n  \"defaultTimeframeEnd\": \"2022-04-20T13:10:04.123Z\",\n  \"timezone\": \"UTC\",\n  \"locale\": \"en_US\",\n  \"maxResultRecords\": 1000,\n  \"maxResultBytes\": 1000000,\n  \"fetchTimeoutSeconds\": 60,\n  \"requestTimeoutMilliseconds\": 1000,\n  \"enablePreview\": true,\n  \"defaultSamplingRatio\": 1000,\n  \"defaultScanLimitGbytes\": 100,\n  \"queryOptions\": {\n    \"minim__75\": \"<string>\",\n    \"qui_9cc\": \"<string>\",\n    \"velit_0_d\": \"<string>\",\n    \"veniam20_\": \"<string>\",\n    \"cupidatat_4f_\": \"<string>\",\n    \"id_0\": \"<string>\",\n    \"deserunt_01\": \"<string>\",\n    \"sint0\": \"<string>\",\n    \"laborum8b\": \"<string>\",\n    \"idc65\": \"<string>\",\n    \"dolora\": \"<string>\",\n    \"dolore426\": \"<string>\",\n    \"labore_a1b\": \"<string>\",\n    \"Ut_917\": \"<string>\",\n    \"elit_78e\": \"<string>\",\n    \"tempord9\": \"<string>\",\n    \"officia_a98\": \"<string>\",\n    \"dolore47e\": \"<string>\",\n    \"culpaae\": \"<string>\",\n    \"magna__\": \"<string>\",\n    \"reprehenderit_31\": \"<string>\",\n    \"culpa_008\": \"<string>\",\n    \"minim_4\": \"<string>\",\n    \"veniam423\": \"<string>\",\n    \"dolor_\": \"<string>\",\n    \"do61\": \"<string>\",\n    \"id_a3\": \"<string>\",\n    \"Duis1\": \"<string>\",\n    \"dolore9b_\": \"<string>\",\n    \"ipsum_3\": \"<string>\"\n  },\n  \"filterSegments\": [\n    {\n      \"id\": \"<string>\",\n      \"variables\": [\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"variables\": [\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}","options":{"raw":{"language":"json"}}}},"status":"Accepted","code":202,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"ttlSeconds\": 398,\n  \"requestToken\": \"D8DZEs1US6ur/fRedQpfDA==\",\n  \"state\": \"RUNNING\"\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"60bd1682-790f-40ed-a63f-2033a19d31a8","name":"The supplied request is wrong. Either the query itself or other parameters are wrong.","originalRequest":{"url":{"path":["query:execute"],"host":["{{baseUrl}}"],"query":[{"key":"enrich","value":"metric-metadata"}],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{"mode":"raw","raw":"{\n  \"query\": \"fetch events \\n| filter event.type == \\\"davis\\\" AND davis.status != \\\"CLOSED\\\" \\n| fields timestamp, davis.title, davis.underMaintenance, davis.status \\n| sort timestamp \\n| limit 10\",\n  \"defaultTimeframeStart\": \"2022-04-20T12:10:04.123Z\",\n  \"defaultTimeframeEnd\": \"2022-04-20T13:10:04.123Z\",\n  \"timezone\": \"UTC\",\n  \"locale\": \"en_US\",\n  \"maxResultRecords\": 1000,\n  \"maxResultBytes\": 1000000,\n  \"fetchTimeoutSeconds\": 60,\n  \"requestTimeoutMilliseconds\": 1000,\n  \"enablePreview\": true,\n  \"defaultSamplingRatio\": 1000,\n  \"defaultScanLimitGbytes\": 100,\n  \"queryOptions\": {\n    \"minim__75\": \"<string>\",\n    \"qui_9cc\": \"<string>\",\n    \"velit_0_d\": \"<string>\",\n    \"veniam20_\": \"<string>\",\n    \"cupidatat_4f_\": \"<string>\",\n    \"id_0\": \"<string>\",\n    \"deserunt_01\": \"<string>\",\n    \"sint0\": \"<string>\",\n    \"laborum8b\": \"<string>\",\n    \"idc65\": \"<string>\",\n    \"dolora\": \"<string>\",\n    \"dolore426\": \"<string>\",\n    \"labore_a1b\": \"<string>\",\n    \"Ut_917\": \"<string>\",\n    \"elit_78e\": \"<string>\",\n    \"tempord9\": \"<string>\",\n    \"officia_a98\": \"<string>\",\n    \"dolore47e\": \"<string>\",\n    \"culpaae\": \"<string>\",\n    \"magna__\": \"<string>\",\n    \"reprehenderit_31\": \"<string>\",\n    \"culpa_008\": \"<string>\",\n    \"minim_4\": \"<string>\",\n    \"veniam423\": \"<string>\",\n    \"dolor_\": \"<string>\",\n    \"do61\": \"<string>\",\n    \"id_a3\": \"<string>\",\n    \"Duis1\": \"<string>\",\n    \"dolore9b_\": \"<string>\",\n    \"ipsum_3\": \"<string>\"\n  },\n  \"filterSegments\": [\n    {\n      \"id\": \"<string>\",\n      \"variables\": [\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"variables\": [\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}","options":{"raw":{"language":"json"}}}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"error\": {\n    \"code\": 400,\n    \"message\": \"UNKNOWN_RECORD_TYPE\",\n    \"details\": {\n      \"exceptionType\": \"DQL-RESULT_TYPE\",\n      \"errorType\": \"UNKNOWN_RECORD_TYPE\",\n      \"errorMessage\": \"Unknown record type: sandwich.\",\n      \"errorMessageFormat\": \"Unknown record type: %s.\",\n      \"errorMessageFormatSpecifierTypes\": [\n        \"RESULT_TYPE\"\n      ],\n      \"arguments\": [\n        \"sandwich\"\n      ],\n      \"queryString\": \"fetch sandwich\",\n      \"syntaxErrorPosition\": {\n        \"start\": {\n          \"index\": 6,\n          \"line\": 1,\n          \"column\": 7\n        },\n        \"end\": {\n          \"index\": 14,\n          \"line\": 1,\n          \"column\": 15\n        }\n      }\n    }\n  }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"5dbfd1d2-acc7-46a5-bb06-167a1cf05aa1","name":"Insufficient permissions.","originalRequest":{"url":{"path":["query:execute"],"host":["{{baseUrl}}"],"query":[{"key":"enrich","value":"metric-metadata"}],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{"mode":"raw","raw":"{\n  \"query\": \"fetch events \\n| filter event.type == \\\"davis\\\" AND davis.status != \\\"CLOSED\\\" \\n| fields timestamp, davis.title, davis.underMaintenance, davis.status \\n| sort timestamp \\n| limit 10\",\n  \"defaultTimeframeStart\": \"2022-04-20T12:10:04.123Z\",\n  \"defaultTimeframeEnd\": \"2022-04-20T13:10:04.123Z\",\n  \"timezone\": \"UTC\",\n  \"locale\": \"en_US\",\n  \"maxResultRecords\": 1000,\n  \"maxResultBytes\": 1000000,\n  \"fetchTimeoutSeconds\": 60,\n  \"requestTimeoutMilliseconds\": 1000,\n  \"enablePreview\": true,\n  \"defaultSamplingRatio\": 1000,\n  \"defaultScanLimitGbytes\": 100,\n  \"queryOptions\": {\n    \"minim__75\": \"<string>\",\n    \"qui_9cc\": \"<string>\",\n    \"velit_0_d\": \"<string>\",\n    \"veniam20_\": \"<string>\",\n    \"cupidatat_4f_\": \"<string>\",\n    \"id_0\": \"<string>\",\n    \"deserunt_01\": \"<string>\",\n    \"sint0\": \"<string>\",\n    \"laborum8b\": \"<string>\",\n    \"idc65\": \"<string>\",\n    \"dolora\": \"<string>\",\n    \"dolore426\": \"<string>\",\n    \"labore_a1b\": \"<string>\",\n    \"Ut_917\": \"<string>\",\n    \"elit_78e\": \"<string>\",\n    \"tempord9\": \"<string>\",\n    \"officia_a98\": \"<string>\",\n    \"dolore47e\": \"<string>\",\n    \"culpaae\": \"<string>\",\n    \"magna__\": \"<string>\",\n    \"reprehenderit_31\": \"<string>\",\n    \"culpa_008\": \"<string>\",\n    \"minim_4\": \"<string>\",\n    \"veniam423\": \"<string>\",\n    \"dolor_\": \"<string>\",\n    \"do61\": \"<string>\",\n    \"id_a3\": \"<string>\",\n    \"Duis1\": \"<string>\",\n    \"dolore9b_\": \"<string>\",\n    \"ipsum_3\": \"<string>\"\n  },\n  \"filterSegments\": [\n    {\n      \"id\": \"<string>\",\n      \"variables\": [\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"variables\": [\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}","options":{"raw":{"language":"json"}}}},"status":"Forbidden","code":403,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"error\": {\n    \"code\": 403,\n    \"message\": \"QUERY_PLAN_BUILD_FAILURE\",\n    \"details\": {\n      \"exceptionType\": \"DQL-EXEC-MAPPING\",\n      \"errorType\": \"QUERY_PLAN_BUILD_FAILURE\",\n      \"errorMessage\": \"Failed to build query plan: Accessing table events is not allowed.\",\n      \"arguments\": [\n        \"Accessing table events is not allowed.\"\n      ],\n      \"queryString\": \"fetch events\",\n      \"errorMessageFormatSpecifierTypes\": [\n        \"GENERAL_MESSAGE\"\n      ],\n      \"errorMessageFormat\": \"Failed to build query plan: %s\"\n    }\n  }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"419ab88e-0e73-4627-87aa-c4a4be440c6c","name":"Too many requests.","originalRequest":{"url":{"path":["query:execute"],"host":["{{baseUrl}}"],"query":[{"key":"enrich","value":"metric-metadata"}],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{"mode":"raw","raw":"{\n  \"query\": \"fetch events \\n| filter event.type == \\\"davis\\\" AND davis.status != \\\"CLOSED\\\" \\n| fields timestamp, davis.title, davis.underMaintenance, davis.status \\n| sort timestamp \\n| limit 10\",\n  \"defaultTimeframeStart\": \"2022-04-20T12:10:04.123Z\",\n  \"defaultTimeframeEnd\": \"2022-04-20T13:10:04.123Z\",\n  \"timezone\": \"UTC\",\n  \"locale\": \"en_US\",\n  \"maxResultRecords\": 1000,\n  \"maxResultBytes\": 1000000,\n  \"fetchTimeoutSeconds\": 60,\n  \"requestTimeoutMilliseconds\": 1000,\n  \"enablePreview\": true,\n  \"defaultSamplingRatio\": 1000,\n  \"defaultScanLimitGbytes\": 100,\n  \"queryOptions\": {\n    \"minim__75\": \"<string>\",\n    \"qui_9cc\": \"<string>\",\n    \"velit_0_d\": \"<string>\",\n    \"veniam20_\": \"<string>\",\n    \"cupidatat_4f_\": \"<string>\",\n    \"id_0\": \"<string>\",\n    \"deserunt_01\": \"<string>\",\n    \"sint0\": \"<string>\",\n    \"laborum8b\": \"<string>\",\n    \"idc65\": \"<string>\",\n    \"dolora\": \"<string>\",\n    \"dolore426\": \"<string>\",\n    \"labore_a1b\": \"<string>\",\n    \"Ut_917\": \"<string>\",\n    \"elit_78e\": \"<string>\",\n    \"tempord9\": \"<string>\",\n    \"officia_a98\": \"<string>\",\n    \"dolore47e\": \"<string>\",\n    \"culpaae\": \"<string>\",\n    \"magna__\": \"<string>\",\n    \"reprehenderit_31\": \"<string>\",\n    \"culpa_008\": \"<string>\",\n    \"minim_4\": \"<string>\",\n    \"veniam423\": \"<string>\",\n    \"dolor_\": \"<string>\",\n    \"do61\": \"<string>\",\n    \"id_a3\": \"<string>\",\n    \"Duis1\": \"<string>\",\n    \"dolore9b_\": \"<string>\",\n    \"ipsum_3\": \"<string>\"\n  },\n  \"filterSegments\": [\n    {\n      \"id\": \"<string>\",\n      \"variables\": [\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"variables\": [\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}","options":{"raw":{"language":"json"}}}},"status":"Too Many Requests","code":429,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"error\": {\n    \"code\": -24793479,\n    \"message\": \"eu in dolor\",\n    \"details\": {\n      \"exceptionType\": \"consequat dolore aliquip\",\n      \"syntaxErrorPosition\": {\n        \"end\": {\n          \"column\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"index\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"line\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"start\": {\n          \"column\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"index\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"line\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      },\n      \"errorType\": \"nostrud in\",\n      \"errorMessage\": \"id labore non Ut\",\n      \"arguments\": [\n        \"Ut adipisicing\",\n        \"laboris dolore\"\n      ],\n      \"queryString\": \"in eu deserunt non pariatur\",\n      \"errorMessageFormatSpecifierTypes\": [\n        \"\",\n        \"enim dolore anim\"\n      ],\n      \"errorMessageFormat\": \"nostrud est quis\",\n      \"queryId\": \"5bc6f99f-c445-370a-7197-aa011e53a749\",\n      \"constraintViolations\": [\n        {\n          \"message\": \"in c\",\n          \"parameterLocation\": \"deserunt\",\n          \"parameterDescriptor\": \"in qui sit\"\n        },\n        {\n          \"message\": \"et culpa ut\",\n          \"parameterLocation\": \"esse veniam pariatur\",\n          \"parameterDescriptor\": \"incididunt nisi veniam nulla\"\n        }\n      ],\n      \"missingScopes\": [\n        \"id et cillum sunt\",\n        \"aute reprehenderit non culpa dolor\"\n      ],\n      \"missingPermissions\": [\n        \"occaecat ex dolor\",\n        \"Excepteur consequat\"\n      ]\n    }\n  }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"5fba6f75-832f-4cac-ae1f-893f63d021fe","name":"An internal server error has occurred.","originalRequest":{"url":{"path":["query:execute"],"host":["{{baseUrl}}"],"query":[{"key":"enrich","value":"metric-metadata"}],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{"mode":"raw","raw":"{\n  \"query\": \"fetch events \\n| filter event.type == \\\"davis\\\" AND davis.status != \\\"CLOSED\\\" \\n| fields timestamp, davis.title, davis.underMaintenance, davis.status \\n| sort timestamp \\n| limit 10\",\n  \"defaultTimeframeStart\": \"2022-04-20T12:10:04.123Z\",\n  \"defaultTimeframeEnd\": \"2022-04-20T13:10:04.123Z\",\n  \"timezone\": \"UTC\",\n  \"locale\": \"en_US\",\n  \"maxResultRecords\": 1000,\n  \"maxResultBytes\": 1000000,\n  \"fetchTimeoutSeconds\": 60,\n  \"requestTimeoutMilliseconds\": 1000,\n  \"enablePreview\": true,\n  \"defaultSamplingRatio\": 1000,\n  \"defaultScanLimitGbytes\": 100,\n  \"queryOptions\": {\n    \"minim__75\": \"<string>\",\n    \"qui_9cc\": \"<string>\",\n    \"velit_0_d\": \"<string>\",\n    \"veniam20_\": \"<string>\",\n    \"cupidatat_4f_\": \"<string>\",\n    \"id_0\": \"<string>\",\n    \"deserunt_01\": \"<string>\",\n    \"sint0\": \"<string>\",\n    \"laborum8b\": \"<string>\",\n    \"idc65\": \"<string>\",\n    \"dolora\": \"<string>\",\n    \"dolore426\": \"<string>\",\n    \"labore_a1b\": \"<string>\",\n    \"Ut_917\": \"<string>\",\n    \"elit_78e\": \"<string>\",\n    \"tempord9\": \"<string>\",\n    \"officia_a98\": \"<string>\",\n    \"dolore47e\": \"<string>\",\n    \"culpaae\": \"<string>\",\n    \"magna__\": \"<string>\",\n    \"reprehenderit_31\": \"<string>\",\n    \"culpa_008\": \"<string>\",\n    \"minim_4\": \"<string>\",\n    \"veniam423\": \"<string>\",\n    \"dolor_\": \"<string>\",\n    \"do61\": \"<string>\",\n    \"id_a3\": \"<string>\",\n    \"Duis1\": \"<string>\",\n    \"dolore9b_\": \"<string>\",\n    \"ipsum_3\": \"<string>\"\n  },\n  \"filterSegments\": [\n    {\n      \"id\": \"<string>\",\n      \"variables\": [\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"variables\": [\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}","options":{"raw":{"language":"json"}}}},"status":"Internal Server Error","code":500,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"error\": {\n    \"code\": 500,\n    \"message\": \"EXECUTION_FAILURE\",\n    \"details\": {\n      \"exceptionType\": \"DQL-EXECUTION\",\n      \"errorType\": \"EXECUTION_FAILURE\",\n      \"errorMessage\": \"NullPointerException\",\n      \"errorMessageFormat\": \"\",\n      \"errorMessageFormatSpecifierTypes\": [],\n      \"arguments\": [],\n      \"queryString\": \"\"\n    }\n  }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"2f8d4a25-26dc-4357-afba-fc8348b57df7","name":"Service is unavailable.","originalRequest":{"url":{"path":["query:execute"],"host":["{{baseUrl}}"],"query":[{"key":"enrich","value":"metric-metadata"}],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{"mode":"raw","raw":"{\n  \"query\": \"fetch events \\n| filter event.type == \\\"davis\\\" AND davis.status != \\\"CLOSED\\\" \\n| fields timestamp, davis.title, davis.underMaintenance, davis.status \\n| sort timestamp \\n| limit 10\",\n  \"defaultTimeframeStart\": \"2022-04-20T12:10:04.123Z\",\n  \"defaultTimeframeEnd\": \"2022-04-20T13:10:04.123Z\",\n  \"timezone\": \"UTC\",\n  \"locale\": \"en_US\",\n  \"maxResultRecords\": 1000,\n  \"maxResultBytes\": 1000000,\n  \"fetchTimeoutSeconds\": 60,\n  \"requestTimeoutMilliseconds\": 1000,\n  \"enablePreview\": true,\n  \"defaultSamplingRatio\": 1000,\n  \"defaultScanLimitGbytes\": 100,\n  \"queryOptions\": {\n    \"minim__75\": \"<string>\",\n    \"qui_9cc\": \"<string>\",\n    \"velit_0_d\": \"<string>\",\n    \"veniam20_\": \"<string>\",\n    \"cupidatat_4f_\": \"<string>\",\n    \"id_0\": \"<string>\",\n    \"deserunt_01\": \"<string>\",\n    \"sint0\": \"<string>\",\n    \"laborum8b\": \"<string>\",\n    \"idc65\": \"<string>\",\n    \"dolora\": \"<string>\",\n    \"dolore426\": \"<string>\",\n    \"labore_a1b\": \"<string>\",\n    \"Ut_917\": \"<string>\",\n    \"elit_78e\": \"<string>\",\n    \"tempord9\": \"<string>\",\n    \"officia_a98\": \"<string>\",\n    \"dolore47e\": \"<string>\",\n    \"culpaae\": \"<string>\",\n    \"magna__\": \"<string>\",\n    \"reprehenderit_31\": \"<string>\",\n    \"culpa_008\": \"<string>\",\n    \"minim_4\": \"<string>\",\n    \"veniam423\": \"<string>\",\n    \"dolor_\": \"<string>\",\n    \"do61\": \"<string>\",\n    \"id_a3\": \"<string>\",\n    \"Duis1\": \"<string>\",\n    \"dolore9b_\": \"<string>\",\n    \"ipsum_3\": \"<string>\"\n  },\n  \"filterSegments\": [\n    {\n      \"id\": \"<string>\",\n      \"variables\": [\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"variables\": [\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}","options":{"raw":{"language":"json"}}}},"status":"Service Unavailable","code":503,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"error\": {\n    \"code\": 503,\n    \"message\": \"BUSY_SCHEDULER\",\n    \"details\": {\n      \"exceptionType\": \"DQL-EXEC-EXECUTION\",\n      \"errorType\": \"BUSY_SCHEDULER\",\n      \"errorMessage\": \"Maximum number of concurrent queries reached\",\n      \"errorMessageFormat\": \"Scheduler is busy\",\n      \"errorMessageFormatSpecifierTypes\": [],\n      \"arguments\": [],\n      \"queryString\": \"fetch logs\"\n    }\n  }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"5cce09e1-023e-4d3a-b315-d51c385904eb","name":"Client error.","originalRequest":{"url":{"path":["query:execute"],"host":["{{baseUrl}}"],"query":[{"key":"enrich","value":"metric-metadata"}],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{"mode":"raw","raw":"{\n  \"query\": \"fetch events \\n| filter event.type == \\\"davis\\\" AND davis.status != \\\"CLOSED\\\" \\n| fields timestamp, davis.title, davis.underMaintenance, davis.status \\n| sort timestamp \\n| limit 10\",\n  \"defaultTimeframeStart\": \"2022-04-20T12:10:04.123Z\",\n  \"defaultTimeframeEnd\": \"2022-04-20T13:10:04.123Z\",\n  \"timezone\": \"UTC\",\n  \"locale\": \"en_US\",\n  \"maxResultRecords\": 1000,\n  \"maxResultBytes\": 1000000,\n  \"fetchTimeoutSeconds\": 60,\n  \"requestTimeoutMilliseconds\": 1000,\n  \"enablePreview\": true,\n  \"defaultSamplingRatio\": 1000,\n  \"defaultScanLimitGbytes\": 100,\n  \"queryOptions\": {\n    \"minim__75\": \"<string>\",\n    \"qui_9cc\": \"<string>\",\n    \"velit_0_d\": \"<string>\",\n    \"veniam20_\": \"<string>\",\n    \"cupidatat_4f_\": \"<string>\",\n    \"id_0\": \"<string>\",\n    \"deserunt_01\": \"<string>\",\n    \"sint0\": \"<string>\",\n    \"laborum8b\": \"<string>\",\n    \"idc65\": \"<string>\",\n    \"dolora\": \"<string>\",\n    \"dolore426\": \"<string>\",\n    \"labore_a1b\": \"<string>\",\n    \"Ut_917\": \"<string>\",\n    \"elit_78e\": \"<string>\",\n    \"tempord9\": \"<string>\",\n    \"officia_a98\": \"<string>\",\n    \"dolore47e\": \"<string>\",\n    \"culpaae\": \"<string>\",\n    \"magna__\": \"<string>\",\n    \"reprehenderit_31\": \"<string>\",\n    \"culpa_008\": \"<string>\",\n    \"minim_4\": \"<string>\",\n    \"veniam423\": \"<string>\",\n    \"dolor_\": \"<string>\",\n    \"do61\": \"<string>\",\n    \"id_a3\": \"<string>\",\n    \"Duis1\": \"<string>\",\n    \"dolore9b_\": \"<string>\",\n    \"ipsum_3\": \"<string>\"\n  },\n  \"filterSegments\": [\n    {\n      \"id\": \"<string>\",\n      \"variables\": [\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"variables\": [\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}","options":{"raw":{"language":"json"}}}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"error\": {\n    \"code\": -85086882,\n    \"message\": \"am\",\n    \"details\": {\n      \"exceptionType\": \"consectetur sint a\",\n      \"syntaxErrorPosition\": {\n        \"end\": {\n          \"column\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"index\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"line\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"start\": {\n          \"column\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"index\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"line\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      },\n      \"errorType\": \"anim aliquip\",\n      \"errorMessage\": \"cupidatat aliquip Ut\",\n      \"arguments\": [\n        \"occaecat aliquip\",\n        \"dol\"\n      ],\n      \"queryString\": \"magna aute\",\n      \"errorMessageFormatSpecifierTypes\": [\n        \"consequat la\",\n        \"non mollit\"\n      ],\n      \"errorMessageFormat\": \"nulla irure est\",\n      \"queryId\": \"c5797c32-1e86-2131-cd5d-e7dbd8927889\",\n      \"constraintViolations\": [\n        {\n          \"message\": \"non qui\",\n          \"parameterLocation\": \"deserunt mollit adipisicing\",\n          \"parameterDescriptor\": \"reprehenderit velit consequat\"\n        },\n        {\n          \"message\": \"non\",\n          \"parameterLocation\": \"dolore ut ad\",\n          \"parameterDescriptor\": \"sed culpa tempor\"\n        }\n      ],\n      \"missingScopes\": [\n        \"esse\",\n        \"qui ad labore sed non\"\n      ],\n      \"missingPermissions\": [\n        \"laboris Exce\",\n        \"exercitation voluptate dolore occaecat\"\n      ]\n    }\n  }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"122491a3-6000-4979-b077-a485b1b15243","name":"Server error.","originalRequest":{"url":{"path":["query:execute"],"host":["{{baseUrl}}"],"query":[{"key":"enrich","value":"metric-metadata"}],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{"mode":"raw","raw":"{\n  \"query\": \"fetch events \\n| filter event.type == \\\"davis\\\" AND davis.status != \\\"CLOSED\\\" \\n| fields timestamp, davis.title, davis.underMaintenance, davis.status \\n| sort timestamp \\n| limit 10\",\n  \"defaultTimeframeStart\": \"2022-04-20T12:10:04.123Z\",\n  \"defaultTimeframeEnd\": \"2022-04-20T13:10:04.123Z\",\n  \"timezone\": \"UTC\",\n  \"locale\": \"en_US\",\n  \"maxResultRecords\": 1000,\n  \"maxResultBytes\": 1000000,\n  \"fetchTimeoutSeconds\": 60,\n  \"requestTimeoutMilliseconds\": 1000,\n  \"enablePreview\": true,\n  \"defaultSamplingRatio\": 1000,\n  \"defaultScanLimitGbytes\": 100,\n  \"queryOptions\": {\n    \"minim__75\": \"<string>\",\n    \"qui_9cc\": \"<string>\",\n    \"velit_0_d\": \"<string>\",\n    \"veniam20_\": \"<string>\",\n    \"cupidatat_4f_\": \"<string>\",\n    \"id_0\": \"<string>\",\n    \"deserunt_01\": \"<string>\",\n    \"sint0\": \"<string>\",\n    \"laborum8b\": \"<string>\",\n    \"idc65\": \"<string>\",\n    \"dolora\": \"<string>\",\n    \"dolore426\": \"<string>\",\n    \"labore_a1b\": \"<string>\",\n    \"Ut_917\": \"<string>\",\n    \"elit_78e\": \"<string>\",\n    \"tempord9\": \"<string>\",\n    \"officia_a98\": \"<string>\",\n    \"dolore47e\": \"<string>\",\n    \"culpaae\": \"<string>\",\n    \"magna__\": \"<string>\",\n    \"reprehenderit_31\": \"<string>\",\n    \"culpa_008\": \"<string>\",\n    \"minim_4\": \"<string>\",\n    \"veniam423\": \"<string>\",\n    \"dolor_\": \"<string>\",\n    \"do61\": \"<string>\",\n    \"id_a3\": \"<string>\",\n    \"Duis1\": \"<string>\",\n    \"dolore9b_\": \"<string>\",\n    \"ipsum_3\": \"<string>\"\n  },\n  \"filterSegments\": [\n    {\n      \"id\": \"<string>\",\n      \"variables\": [\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"variables\": [\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"values\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}","options":{"raw":{"language":"json"}}}},"status":"Internal Server Error","code":500,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"error\": {\n    \"code\": -85086882,\n    \"message\": \"am\",\n    \"details\": {\n      \"exceptionType\": \"consectetur sint a\",\n      \"syntaxErrorPosition\": {\n        \"end\": {\n          \"column\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"index\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"line\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"start\": {\n          \"column\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"index\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"line\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      },\n      \"errorType\": \"anim aliquip\",\n      \"errorMessage\": \"cupidatat aliquip Ut\",\n      \"arguments\": [\n        \"occaecat aliquip\",\n        \"dol\"\n      ],\n      \"queryString\": \"magna aute\",\n      \"errorMessageFormatSpecifierTypes\": [\n        \"consequat la\",\n        \"non mollit\"\n      ],\n      \"errorMessageFormat\": \"nulla irure est\",\n      \"queryId\": \"c5797c32-1e86-2131-cd5d-e7dbd8927889\",\n      \"constraintViolations\": [\n        {\n          \"message\": \"non qui\",\n          \"parameterLocation\": \"deserunt mollit adipisicing\",\n          \"parameterDescriptor\": \"reprehenderit velit consequat\"\n        },\n        {\n          \"message\": \"non\",\n          \"parameterLocation\": \"dolore ut ad\",\n          \"parameterDescriptor\": \"sed culpa tempor\"\n        }\n      ],\n      \"missingScopes\": [\n        \"esse\",\n        \"qui ad labore sed non\"\n      ],\n      \"missingPermissions\": [\n        \"laboris Exce\",\n        \"exercitation voluptate dolore occaecat\"\n      ]\n    }\n  }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[],"protocolProfileBehavior":{"disableBodyPruning":true}},{"id":"8855a773-f184-48d4-8b22-913fe249cdaa","name":"Cancels the query and returns the result if the query was already finished, otherwise discards it.","request":{"name":"Cancels the query and returns the result if the query was already finished, otherwise discards it.","description":{"content":"For information about the required permissions see the [Bucket and table permissions in Grail documentation](https://docs.dynatrace.com/docs/shortlink/assign-bucket-table-permissions). \n\n### Overview:\n\nCancels a running Grail query and returns a list of records if the query already finished.\n\n### The response format:\n\nIf the query was already finished, a response body including the result will be returned. Otherwise the response will contain no body.\n\nThe result has three main sections:\n* the 'records' section contains the individual records, where each record consists of a set of fields and their corresponding values.\n* the 'types' section describes the corresponding data types that a record field has.\n* the 'metadata' section contains information about the query like 'analysisTimeframe', 'timezone' or 'locale'.\n\nEvery record has an implicit 'index' according to the position in the 'records' JSON array.\nThe types section has a list of 1..N possible type 'buckets'. Each such bucket has an 'indexRange' which indicates which\nrecords will find their field types in which bucket. The index range has two values start & end and can be thought of as [startIndex, endIndex).\n\nA field part of a record with index 'i' will find its corresponding field type by first locating the bucket that satisfies:\n\n```text\nstartIndex <= i <= endIndex\n```\n\nOnce the bucket is found the 'mappings' object has an entry for all the fields that are part of that record with index 'i'.\n\n\nSince enforcement of a particular schema is absent at ingestion time, it is possible to have records that share the same\nfield name but their values are of a different type. This phenomenon will hence forth be named as a **\"collision\"**.\nWhen a collision does occur, we will create a new type 'bucket' that will have a different index range where\nthe new record field types will be placed.\nIt is guaranteed that every field of every record will have a corresponding type.\n**Clients should always take the included types into account when consuming records!**","type":"text/plain"},"url":{"path":["query:cancel"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"request-token","value":"<string>","description":"(Required) The request-token of the query."},{"disabled":false,"key":"enrich","value":"<string>","description":"If set additional data will be available in the metadata section."}],"variable":[]},"header":[{"key":"Accept","value":"application/json"}],"method":"POST","auth":{"type":"oauth2","oauth2":[{"key":"scope","value":"storage:events:read storage:logs:read storage:metrics:read storage:bizevents:read storage:spans:read storage:system:read storage:entities:read storage:buckets:read storage:fieldsets:read"},{"key":"accessTokenUrl","value":"https://sso.dynatrace.com/sso/oauth2/token"},{"key":"grant_type","value":"client_credentials"}]}},"response":[{"id":"c42b65ed-ea8c-40bf-8d82-cb758d7ed16a","name":"The query already finished.","originalRequest":{"url":{"path":["query:cancel"],"host":["{{baseUrl}}"],"query":[{"key":"request-token","value":"HKsGJwblS6mSwDn0WbzSsQ=="},{"key":"enrich","value":"metric-metadata"}],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"state\": \"SUCCEEDED\",\n  \"progress\": 100,\n  \"result\": {\n    \"records\": [\n      {\n        \"timestamp\": \"2022-03-17T08:00:01.231000000Z\",\n        \"davis.title\": \"Http monitor global outage\",\n        \"davis.underMaintenance\": \"false\",\n        \"davis.status\": \"OPEN\"\n      },\n      {\n        \"timestamp\": \"2022-03-17T08:00:01.231000000Z\",\n        \"davis.title\": \"Http monitor global outage\",\n        \"davis.underMaintenance\": \"false\",\n        \"davis.status\": \"OPEN\"\n      },\n      {\n        \"timestamp\": \"2022-03-17T08:00:01.231000000Z\",\n        \"davis.title\": \"Http monitor global outage\",\n        \"davis.underMaintenance\": \"false\",\n        \"davis.status\": \"OPEN\"\n      },\n      {\n        \"timestamp\": \"2022-03-17T08:00:01.231000000Z\",\n        \"davis.title\": \"Http monitor global outage\",\n        \"davis.underMaintenance\": \"false\",\n        \"davis.status\": \"OPEN\"\n      }\n    ],\n    \"types\": [\n      {\n        \"indexRange\": [\n          0,\n          3\n        ],\n        \"mappings\": {\n          \"timestamp\": {\n            \"type\": \"timestamp\"\n          },\n          \"davis.title\": {\n            \"type\": \"string\"\n          },\n          \"davis.underMaintenance\": {\n            \"type\": \"string\"\n          },\n          \"davis.status\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    ]\n  },\n  \"metadata\": {\n    \"grail\": {\n      \"queryId\": \"92918dae-c2f9-4c98-b278-dc42adcc5954\",\n      \"query\": \"fetch ...\",\n      \"dqlVersion\": \"V1_0\",\n      \"analysisTimeframe\": {\n        \"start\": \"2023-03-10T09:02:00.705980000Z\",\n        \"end\": \"2023-03-10T11:02:00.705980000Z\"\n      },\n      \"timezone\": \"Z\",\n      \"locale\": \"\",\n      \"executionTimeMilliseconds\": 18\n    }\n  }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"2005c1e5-4f09-4e87-8c69-da11bb55fbda","name":"The query was still running and is now cancelled.","originalRequest":{"url":{"path":["query:cancel"],"host":["{{baseUrl}}"],"query":[{"key":"request-token","value":"HKsGJwblS6mSwDn0WbzSsQ=="},{"key":"enrich","value":"metric-metadata"}],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{}},"status":"Accepted","code":202,"header":[{"key":"Content-Type","value":"text/plain"}],"body":"","cookie":[],"_postman_previewlanguage":"text"},{"id":"6681f773-6fb4-413e-b25d-5904d76d62da","name":"The supplied request is wrong. Either the query itself or other parameters are wrong.","originalRequest":{"url":{"path":["query:cancel"],"host":["{{baseUrl}}"],"query":[{"key":"request-token","value":"HKsGJwblS6mSwDn0WbzSsQ=="},{"key":"enrich","value":"metric-metadata"}],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"error\": {\n    \"code\": 400,\n    \"message\": \"UNKNOWN_RECORD_TYPE\",\n    \"details\": {\n      \"exceptionType\": \"DQL-RESULT_TYPE\",\n      \"errorType\": \"UNKNOWN_RECORD_TYPE\",\n      \"errorMessage\": \"Unknown record type: sandwich.\",\n      \"errorMessageFormat\": \"Unknown record type: %s.\",\n      \"errorMessageFormatSpecifierTypes\": [\n        \"RESULT_TYPE\"\n      ],\n      \"arguments\": [\n        \"sandwich\"\n      ],\n      \"queryString\": \"fetch sandwich\",\n      \"syntaxErrorPosition\": {\n        \"start\": {\n          \"index\": 6,\n          \"line\": 1,\n          \"column\": 7\n        },\n        \"end\": {\n          \"index\": 14,\n          \"line\": 1,\n          \"column\": 15\n        }\n      }\n    }\n  }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"7006c28f-f203-4edb-8eb4-2898ac9d9d05","name":"The query for the given request-token is not available anymore.","originalRequest":{"url":{"path":["query:cancel"],"host":["{{baseUrl}}"],"query":[{"key":"request-token","value":"HKsGJwblS6mSwDn0WbzSsQ=="},{"key":"enrich","value":"metric-metadata"}],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{}},"status":"Gone","code":410,"header":[{"key":"Content-Type","value":"text/plain"}],"body":"","cookie":[],"_postman_previewlanguage":"text"},{"id":"b6186451-4978-4e81-a318-0500df37a9c2","name":"An internal server error has occurred.","originalRequest":{"url":{"path":["query:cancel"],"host":["{{baseUrl}}"],"query":[{"key":"request-token","value":"HKsGJwblS6mSwDn0WbzSsQ=="},{"key":"enrich","value":"metric-metadata"}],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{}},"status":"Internal Server Error","code":500,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"error\": {\n    \"code\": 500,\n    \"message\": \"EXECUTION_FAILURE\",\n    \"details\": {\n      \"exceptionType\": \"DQL-EXECUTION\",\n      \"errorType\": \"EXECUTION_FAILURE\",\n      \"errorMessage\": \"NullPointerException\",\n      \"errorMessageFormat\": \"\",\n      \"errorMessageFormatSpecifierTypes\": [],\n      \"arguments\": [],\n      \"queryString\": \"\"\n    }\n  }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[],"protocolProfileBehavior":{"disableBodyPruning":true}},{"id":"295dcc46-a3a5-465e-acbf-e922967e3b7a","name":"Verifies a query without executing it.","request":{"name":"Verifies a query without executing it.","description":{"content":"For information about the required permissions see the [Bucket and table permissions in Grail documentation](https://docs.dynatrace.com/docs/shortlink/assign-bucket-table-permissions).\n\n## Overview\n\nVerifies the supplied query string and other query parameters for lack of any errors, but without actually \nsubmitting the query for execution.","type":"text/plain"},"url":{"path":["query:verify"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"method":"POST","auth":{"type":"oauth2","oauth2":[{"key":"scope","value":"storage:events:read storage:logs:read storage:metrics:read storage:bizevents:read storage:spans:read storage:system:read storage:entities:read storage:buckets:read storage:fieldsets:read"},{"key":"accessTokenUrl","value":"https://sso.dynatrace.com/sso/oauth2/token"},{"key":"grant_type","value":"client_credentials"}]},"body":{"mode":"raw","raw":"{\n  \"query\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"locale\": \"<string>\",\n  \"queryOptions\": {\n    \"reprehenderit_6\": \"<string>\",\n    \"incididunt801\": \"<string>\",\n    \"animf4\": \"<string>\",\n    \"mollitc18\": \"<string>\",\n    \"sit97\": \"<string>\",\n    \"esse_f2\": \"<string>\",\n    \"enim3d\": \"<string>\",\n    \"proident_2ca\": \"<string>\",\n    \"ex0\": \"<string>\",\n    \"dolor_c7\": \"<string>\",\n    \"culpa8\": \"<string>\",\n    \"reprehenderit_1\": \"<string>\",\n    \"etc3_\": \"<string>\",\n    \"proident_3\": \"<string>\",\n    \"dolore_e\": \"<string>\",\n    \"minim_42\": \"<string>\",\n    \"eiusmod1\": \"<string>\",\n    \"qui_d0\": \"<string>\",\n    \"enim0\": \"<string>\",\n    \"velit_3f\": \"<string>\",\n    \"culpa4\": \"<string>\"\n  },\n  \"generateCanonicalQuery\": false\n}","options":{"raw":{"language":"json"}}}},"response":[{"id":"0313217e-ad45-4c81-ba99-3cfa7657e980","name":"Supplied query and parameters were verified.","originalRequest":{"url":{"path":["query:verify"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{"mode":"raw","raw":"{\n  \"query\": \"fetch events \\n| filter event.type == \\\"davis\\\" AND davis.status != \\\"CLOSED\\\" \\n| fields timestamp, davis.title, davis.underMaintenance, davis.status \\n| sort timestamp \\n| limit 10\",\n  \"timezone\": \"UTC\",\n  \"locale\": \"en_US\",\n  \"queryOptions\": {\n    \"nisi_5_\": \"<string>\",\n    \"laborea\": \"<string>\",\n    \"ut_e\": \"<string>\",\n    \"exercitation_e\": \"<string>\",\n    \"eiusmod_1\": \"<string>\",\n    \"anim_099\": \"<string>\",\n    \"quis_4a\": \"<string>\",\n    \"iruref6_\": \"<string>\",\n    \"ada0\": \"<string>\",\n    \"consequat_916\": \"<string>\",\n    \"culpa4b\": \"<string>\",\n    \"esseb\": \"<string>\",\n    \"ex8\": \"<string>\",\n    \"proidenta8\": \"<string>\",\n    \"quis_2\": \"<string>\",\n    \"in64e\": \"<string>\",\n    \"pariatur5e2\": \"<string>\"\n  },\n  \"generateCanonicalQuery\": false\n}","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"valid\": false,\n  \"canonicalQuery\": \"non exercitation\",\n  \"notifications\": [\n    {\n      \"severity\": \"nulla sint\",\n      \"messageFormat\": \"eiusmod Lorem amet\",\n      \"syntaxPosition\": {\n        \"end\": {\n          \"column\": 10886038,\n          \"index\": -8601942,\n          \"line\": 50322223\n        },\n        \"start\": {\n          \"column\": 93607873,\n          \"index\": -69203319,\n          \"line\": -40696858\n        }\n      },\n      \"messageFormatSpecifierTypes\": [\n        \"esse tempor reprehenderit enim irure\",\n        \"Ut qui eu consequat ex\"\n      ],\n      \"arguments\": [\n        \"ut laborum ex velit et\",\n        \"tempor\"\n      ],\n      \"notificationType\": \"in dolor\",\n      \"message\": \"Lorem proident culpa\"\n    },\n    {\n      \"severity\": \"laborum consectetur sunt cupidat\",\n      \"messageFormat\": \"aliqua ullamco\",\n      \"syntaxPosition\": {\n        \"end\": {\n          \"column\": 3857702,\n          \"index\": 22025188,\n          \"line\": -8330510\n        },\n        \"start\": {\n          \"column\": -31268092,\n          \"index\": -90733384,\n          \"line\": -38134168\n        }\n      },\n      \"messageFormatSpecifierTypes\": [\n        \"id tempor aliquip est\",\n        \"aute tempor con\"\n      ],\n      \"arguments\": [\n        \"occaecat dolor elit adipisicing\",\n        \"eu dolor Lorem\"\n      ],\n      \"notificationType\": \"labore dolore in cons\",\n      \"message\": \"Excepteur quis aute\"\n    }\n  ]\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"68b2181e-21ee-4492-ab42-4ac759768a60","name":"The supplied request is wrong.","originalRequest":{"url":{"path":["query:verify"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{"mode":"raw","raw":"{\n  \"query\": \"fetch events \\n| filter event.type == \\\"davis\\\" AND davis.status != \\\"CLOSED\\\" \\n| fields timestamp, davis.title, davis.underMaintenance, davis.status \\n| sort timestamp \\n| limit 10\",\n  \"timezone\": \"UTC\",\n  \"locale\": \"en_US\",\n  \"queryOptions\": {\n    \"nisi_5_\": \"<string>\",\n    \"laborea\": \"<string>\",\n    \"ut_e\": \"<string>\",\n    \"exercitation_e\": \"<string>\",\n    \"eiusmod_1\": \"<string>\",\n    \"anim_099\": \"<string>\",\n    \"quis_4a\": \"<string>\",\n    \"iruref6_\": \"<string>\",\n    \"ada0\": \"<string>\",\n    \"consequat_916\": \"<string>\",\n    \"culpa4b\": \"<string>\",\n    \"esseb\": \"<string>\",\n    \"ex8\": \"<string>\",\n    \"proidenta8\": \"<string>\",\n    \"quis_2\": \"<string>\",\n    \"in64e\": \"<string>\",\n    \"pariatur5e2\": \"<string>\"\n  },\n  \"generateCanonicalQuery\": false\n}","options":{"raw":{"language":"json"}}}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"error\": {\n    \"message\": \"BAD_REQUEST\",\n    \"details\": {\n      \"exceptionType\": \"API-REQUEST_VALIDATION\",\n      \"errorType\": \"BAD_REQUEST\",\n      \"errorMessage\": \"JSON parse error\",\n      \"arguments\": [\n        \"JSON parse error\"\n      ],\n      \"queryString\": \"\",\n      \"errorMessageFormatSpecifierTypes\": [\n        \"GENERAL_MESSAGE\"\n      ],\n      \"errorMessageFormat\": \"%s\"\n    },\n    \"code\": 400\n  }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"6ccfb316-3427-4e43-90ed-b8aafd47a1c3","name":"An internal server error has occurred.","originalRequest":{"url":{"path":["query:verify"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{"mode":"raw","raw":"{\n  \"query\": \"fetch events \\n| filter event.type == \\\"davis\\\" AND davis.status != \\\"CLOSED\\\" \\n| fields timestamp, davis.title, davis.underMaintenance, davis.status \\n| sort timestamp \\n| limit 10\",\n  \"timezone\": \"UTC\",\n  \"locale\": \"en_US\",\n  \"queryOptions\": {\n    \"nisi_5_\": \"<string>\",\n    \"laborea\": \"<string>\",\n    \"ut_e\": \"<string>\",\n    \"exercitation_e\": \"<string>\",\n    \"eiusmod_1\": \"<string>\",\n    \"anim_099\": \"<string>\",\n    \"quis_4a\": \"<string>\",\n    \"iruref6_\": \"<string>\",\n    \"ada0\": \"<string>\",\n    \"consequat_916\": \"<string>\",\n    \"culpa4b\": \"<string>\",\n    \"esseb\": \"<string>\",\n    \"ex8\": \"<string>\",\n    \"proidenta8\": \"<string>\",\n    \"quis_2\": \"<string>\",\n    \"in64e\": \"<string>\",\n    \"pariatur5e2\": \"<string>\"\n  },\n  \"generateCanonicalQuery\": false\n}","options":{"raw":{"language":"json"}}}},"status":"Internal Server Error","code":500,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"error\": {\n    \"code\": 500,\n    \"message\": \"EXECUTION_FAILURE\",\n    \"details\": {\n      \"exceptionType\": \"DQL-EXECUTION\",\n      \"errorType\": \"EXECUTION_FAILURE\",\n      \"errorMessage\": \"NullPointerException\",\n      \"errorMessageFormat\": \"\",\n      \"errorMessageFormatSpecifierTypes\": [],\n      \"arguments\": [],\n      \"queryString\": \"\"\n    }\n  }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[],"protocolProfileBehavior":{"disableBodyPruning":true}},{"id":"7376c764-d671-410f-a241-2402e16f97ed","name":"Get a structured tree of the canonical form of the query.","request":{"name":"Get a structured tree of the canonical form of the query.","description":{"content":"For information about the required permissions see the [Bucket and table permissions in Grail documentation](https://docs.dynatrace.com/docs/shortlink/assign-bucket-table-permissions). \n\n## Overview\n\nReturns the parsed query as a tree, containing the structure of the canonical query. Tree-nodes can contain references to\nthe token position where they originate from. This may help to provide hover effects, show canonical forms, mark\noptional items, and more.\n\n## Details\n\nThe query tree consists of nodes that contain different additional information (everything optional):\n\n### General Fields\n\nField | Mandatory |  Description\n----------------------- | --- | ----------------------------------------------------------------------------------------\ntokenPosition           | no  | optional. If present, it represents the position within the query string where the node refers to.\nisOptional              | no  | whether this node could be left out and the result would still be the same query (semantically).\n\n#### tokenPosition\n\ncontains `start` (inclusive) and `end` (inclusive), both contain `index` (0 based; fur substrings), `line`\nand `column` (both 1-based; for readability).\n\n* If `tokenPosition` is present, it always contains start and end with all fields\n* If `tokenPosition` is not present, there might still be nested nodes that do contain a position\n* If `start == end`, the position refers to a single character\n* If `start > end`, we know for sure that something was inserted.\n\nWe can always check whether the canonical representation of a node matches the text in the tokenPosition to see whether\nsomething was inserted, removed, or changed.\n\n#### isOptional\n\nonly present if it is true.\n\nOptional nodes can e.g. be optional braces that make a query more readable, but are not necessary. This could be used to\nenter *ghost braces* and *implicit functions* in the user's input field; maybe with different formatting\n(using the tokenPosition of sibling nodes we can also check whether the user wrote these or not).\n\n### Advanced Token Types\n\neach node is of one of following types and may contain more fields:\n\n* Terminal Node\n* ContainerNode\n* Alternative Node\n\n#### Terminal Node\n\ncan be identified by checking whether `canonicalString` is present\n\nField | Mandatory |  Description\n------------------------ | --- | ---------------------------------------------------------------------------------------\ntype                     | yes | the type of the terminal node - do not confuse with the type of container nodes\ncanonicalString          | yes | the canonical string representation. Concatenating the canonicalString of all nested terminal nodes provides the canonical form of the query.\nisMandatoryOnUserOrder   | no  | may only be present if (`type=\"BRACE_OPEN\"` or `type=\"BRACE_CLOSE\"`) and `isOptional=true`. For usage see section [Special node type: PARAMETERS](#special-node-type-parameters)\n\n##### Current types of terminal nodes (list might grow):\n\n* SPACE\n* LINEBREAK\n* INDENT\n* PIPE\n* DOT\n* COLON\n* COMMA\n* BRACE_OPEN\n* BRACE_CLOSE\n* BRACKET_OPEN\n* BRACKET_CLOSE\n* PARENTHESIS_OPEN\n* PARENTHESIS_CLOSE\n* QUOTE\n* SLASH\n* BOOLEAN_TRUE\n* BOOLEAN_FALSE\n* NULL\n* COMMAND_NAME\n* PARAMETER_KEY\n* PARAMETER_VALUE_SCOPE\n* FUNCTION_NAME\n* OPERATOR\n* TRAVERSAL_OPERATOR\n* TRAVERSAL_RELATION_NAME\n* TRAVERSAL_HOP_COUNT\n* SIMPLE_IDENTIFIER\n* NUMBER\n* STRING\n* TIME_UNIT\n* TIMESTAMP_VALUE\n* METRIC_KEY\n* VARIABLE\n\n#### ContainerNode\n\ncan be identified by checking whether `children` is present\n\nField | Mandatory |  Description\n----------------------- | --- | ----------------------------------------------------------------------------------------\ntype                    | yes | the type of the container node - do not confuse with the type of terminal nodes\nchildren                | yes | the children for the node. might be of any type\n\n##### Current types of container nodes (list might grow):\n\n* QUERY\n* EXECUTION_BLOCK\n* COMMAND\n* COMMAND_SEPARATOR\n* PARAMETER_WITH_KEY\n* GROUP\n* PARAMETERS - check examples further down\n* PARAMETER_NAMING\n* PARAMETER_SEPARATOR\n* FUNCTION\n* FUNCTION_PART - check examples further down\n* EXPRESSION\n* IDENTIFIER\n* SOURCE_ID\n* DURATION\n* TIMESTAMP\n* TIMEFRAME\n* TRAVERSAL_PATH\n* TRAVERSAL_STEP\n\n##### Special node type: PARAMETERS\n\ncan contain children representing the parameters. Every second child is of type PARAMETER_SEPARATOR.\n\nYou may reorder the children based on their tokenPosition to get the user order. However, in this case, \nyou need to consider `isMandatoryOnUserOrder` to determine whether the grouping braces are mandatory or not.\n\n###### Example \n\nFor the query `SORT a, {direction:\"descending\", b}`, the canonical form is:\n\n`SORT a, {b, direction:\"descending\"}`\n\nThis is the order, in which the parameters are returned in the query tree.\nParameters are {a} and {{b} and {direction:\"descending\"}}. In this case, the braces are optional.\n\n`SORT a, {b, direction:\"descending\"}` is equivalent to `SORT a, b, direction:\"descending\"`\n\nHowever, if you reorder the children by tokenPosition, the braces are not optional, because\n\n`SORT a, direction:\"descending\", b` is interpreted as `SORT {a, direction:\"descending\"}, b`\n\nSo, if the children in PARAMETERS are re-ordered by tokenPosition, braces (or in general: TerminalNodes)\nare only optional if `isOptional && !isMandatoryOnUserOrder`.\n\n##### Special node type: FUNCTION_PART\n\nA container node of type `FUNCTION` may contain nodes of type `FUNCTION_PART`.\n\nIf those `FUNCTION_PART`s are marked as optional, this means you have to either include *all* or *none* of these\noptional function parts.\n\n*Example*:\n\n`filter anyMatch(a.b == 1, input:a)`\n\nThe optional function parts are `anyMatch(` and `, input:a)`. If you leave out both, the command will still work:\n`filter a.b == 1` and return the same result. Using one of these optional function parts and removing the other will lead\nto an invalid query.\n\n#### Alternative Node\n\ncan be identified by checking whether `alternatives` is present\n\nField | Mandatory |  Description\n----------------------- | --- | ----------------------------------------------------------------------------------------\nalternatives            | yes | Type: Map&lt;AlternativeType, DQLNode&gt;\n\nWhen displaying the query, pick one option. You may use the other options for hovering, replacing, and more.\n\n##### Current values of AlternativeType (list might grow):\n\n* CANONICAL: This node is the one we will use for our canonical form\n* USER: An alternative that is also valid, but not canonical; and this version was picked by the user.\n* INFO: only if the canonical version is not present\n\n*Examples*:\n\n* `CANONICAL` is not present, `USER` is present: user's nodes are optional, but not canonical (usually optional nodes\n  are still canonical)\n* `CANONICAL` is present, `USER` is not present: same as if the canonical node was optional. If this happens, it is\n  likely that there is also an `INFO` node\n* `CANONICAL` is present, `USER` is present: there are different alternatives\n* `INFO` is present: usually if `CANONICAL` is not present (e.g. the parameter key for `FILTER a == 1`), there is an info node\n  for `FILTER condition:a == 1`. This `condition:` was neither written by the user nor is it canonical; but it might be\n  used to help the user understand what this parameter means.","type":"text/plain"},"url":{"path":["query:parse"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"method":"POST","auth":{"type":"oauth2","oauth2":[{"key":"scope","value":"storage:events:read storage:logs:read storage:metrics:read storage:bizevents:read storage:spans:read storage:system:read storage:entities:read storage:buckets:read storage:fieldsets:read"},{"key":"accessTokenUrl","value":"https://sso.dynatrace.com/sso/oauth2/token"},{"key":"grant_type","value":"client_credentials"}]},"body":{"mode":"raw","raw":"{\n  \"query\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"locale\": \"<string>\",\n  \"queryOptions\": {\n    \"ut5\": \"<string>\",\n    \"in_0\": \"<string>\",\n    \"magnaf6\": \"<string>\",\n    \"anim_\": \"<string>\",\n    \"ipsum7f\": \"<string>\",\n    \"pariatur7\": \"<string>\",\n    \"occaecat_fc7\": \"<string>\",\n    \"tempor_75\": \"<string>\",\n    \"tempor_782\": \"<string>\",\n    \"eu_7\": \"<string>\",\n    \"officiad3\": \"<string>\",\n    \"pariatur4c_\": \"<string>\",\n    \"nostrudb9\": \"<string>\",\n    \"do_a\": \"<string>\",\n    \"sunt26c\": \"<string>\",\n    \"esse7_6\": \"<string>\",\n    \"non_f51\": \"<string>\",\n    \"eu7\": \"<string>\",\n    \"estd\": \"<string>\",\n    \"irure_d\": \"<string>\",\n    \"Duis_d1e\": \"<string>\",\n    \"temporae3\": \"<string>\",\n    \"cupidatat_4fd\": \"<string>\",\n    \"Ut43f\": \"<string>\",\n    \"elit_e16\": \"<string>\",\n    \"voluptated\": \"<string>\"\n  }\n}","options":{"raw":{"language":"json"}}}},"response":[{"id":"843b04f5-5914-4065-87a2-fa9bc35f0c7f","name":"A node containing more nodes,  a node offering different (semantically equivalent) versions of the query parts, or a terminal node that shows the canonical form.","originalRequest":{"url":{"path":["query:parse"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{"mode":"raw","raw":"{\n  \"query\": \"fetch events \\n| filter event.type == \\\"davis\\\" AND davis.status != \\\"CLOSED\\\" \\n| fields timestamp, davis.title, davis.underMaintenance, davis.status \\n| sort timestamp \\n| limit 10\",\n  \"timezone\": \"UTC\",\n  \"locale\": \"en_US\",\n  \"queryOptions\": {\n    \"mollit2\": \"<string>\",\n    \"cillumd7\": \"<string>\",\n    \"quis_355\": \"<string>\",\n    \"in_5\": \"<string>\",\n    \"sint55_\": \"<string>\"\n  }\n}","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"tokenPosition\": {\n    \"start\": {\n      \"index\": 0,\n      \"line\": 1,\n      \"column\": 1\n    },\n    \"end\": {\n      \"index\": 18,\n      \"line\": 1,\n      \"column\": 19\n    }\n  },\n  \"type\": \"QUERY\",\n  \"children\": [\n    {\n      \"tokenPosition\": {\n        \"start\": {\n          \"index\": 0,\n          \"line\": 1,\n          \"column\": 1\n        },\n        \"end\": {\n          \"index\": 18,\n          \"line\": 1,\n          \"column\": 19\n        }\n      },\n      \"type\": \"COMMAND\",\n      \"children\": [\n        {\n          \"tokenPosition\": {\n            \"start\": {\n              \"index\": 0,\n              \"line\": 1,\n              \"column\": 1\n            },\n            \"end\": {\n              \"index\": 4,\n              \"line\": 1,\n              \"column\": 5\n            }\n          },\n          \"type\": \"COMMAND_NAME\",\n          \"canonicalString\": \"fetch\",\n          \"nodeType\": \"TERMINAL\"\n        },\n        {\n          \"type\": \"SPACE\",\n          \"canonicalString\": \" \",\n          \"nodeType\": \"TERMINAL\"\n        },\n        {\n          \"tokenPosition\": {\n            \"start\": {\n              \"index\": 15,\n              \"line\": 1,\n              \"column\": 16\n            },\n            \"end\": {\n              \"index\": 18,\n              \"line\": 1,\n              \"column\": 19\n            }\n          },\n          \"type\": \"GROUP\",\n          \"children\": [\n            {\n              \"type\": \"PARAMETERS\",\n              \"children\": [\n                {\n                  \"tokenPosition\": {\n                    \"start\": {\n                      \"index\": 15,\n                      \"line\": 1,\n                      \"column\": 16\n                    },\n                    \"end\": {\n                      \"index\": 18,\n                      \"line\": 1,\n                      \"column\": 19\n                    }\n                  },\n                  \"type\": \"PARAMETER_WITH_KEY\",\n                  \"children\": [\n                    {\n                      \"alternatives\": {\n                        \"USER\": {\n                          \"type\": \"PARAMETER_NAMING\",\n                          \"children\": [\n                            {\n                              \"tokenPosition\": {\n                                \"start\": {\n                                  \"index\": 6,\n                                  \"line\": 1,\n                                  \"column\": 7\n                                },\n                                \"end\": {\n                                  \"index\": 13,\n                                  \"line\": 1,\n                                  \"column\": 14\n                                }\n                              },\n                              \"type\": \"PARAMETER_KEY\",\n                              \"canonicalString\": \"sourceId\",\n                              \"nodeType\": \"TERMINAL\"\n                            },\n                            {\n                              \"type\": \"COLON\",\n                              \"canonicalString\": \":\",\n                              \"nodeType\": \"TERMINAL\"\n                            }\n                          ],\n                          \"isOptional\": true,\n                          \"nodeType\": \"CONTAINER\"\n                        },\n                        \"INFO\": {\n                          \"type\": \"PARAMETER_NAMING\",\n                          \"children\": [\n                            {\n                              \"tokenPosition\": {\n                                \"start\": {\n                                  \"index\": 6,\n                                  \"line\": 1,\n                                  \"column\": 7\n                                },\n                                \"end\": {\n                                  \"index\": 13,\n                                  \"line\": 1,\n                                  \"column\": 14\n                                }\n                              },\n                              \"type\": \"PARAMETER_KEY\",\n                              \"canonicalString\": \"sourceId\",\n                              \"nodeType\": \"TERMINAL\"\n                            },\n                            {\n                              \"type\": \"COLON\",\n                              \"canonicalString\": \":\",\n                              \"nodeType\": \"TERMINAL\"\n                            }\n                          ],\n                          \"isOptional\": true,\n                          \"nodeType\": \"CONTAINER\"\n                        }\n                      },\n                      \"nodeType\": \"ALTERNATIVE\"\n                    },\n                    {\n                      \"tokenPosition\": {\n                        \"start\": {\n                          \"index\": 15,\n                          \"line\": 1,\n                          \"column\": 16\n                        },\n                        \"end\": {\n                          \"index\": 18,\n                          \"line\": 1,\n                          \"column\": 19\n                        }\n                      },\n                      \"type\": \"SOURCE_ID\",\n                      \"children\": [\n                        {\n                          \"tokenPosition\": {\n                            \"start\": {\n                              \"index\": 15,\n                              \"line\": 1,\n                              \"column\": 16\n                            },\n                            \"end\": {\n                              \"index\": 18,\n                              \"line\": 1,\n                              \"column\": 19\n                            }\n                          },\n                          \"type\": \"SIMPLE_IDENTIFIER\",\n                          \"canonicalString\": \"logs\",\n                          \"nodeType\": \"TERMINAL\"\n                        }\n                      ],\n                      \"nodeType\": \"CONTAINER\"\n                    }\n                  ],\n                  \"nodeType\": \"CONTAINER\"\n                }\n              ],\n              \"nodeType\": \"CONTAINER\"\n            }\n          ],\n          \"nodeType\": \"CONTAINER\"\n        }\n      ],\n      \"nodeType\": \"CONTAINER\"\n    }\n  ],\n  \"nodeType\": \"CONTAINER\"\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"b30a5419-16ef-47a5-9fad-dd44069e9aca","name":"The supplied request is wrong. Either the query itself or other parameters are wrong.","originalRequest":{"url":{"path":["query:parse"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{"mode":"raw","raw":"{\n  \"query\": \"fetch events \\n| filter event.type == \\\"davis\\\" AND davis.status != \\\"CLOSED\\\" \\n| fields timestamp, davis.title, davis.underMaintenance, davis.status \\n| sort timestamp \\n| limit 10\",\n  \"timezone\": \"UTC\",\n  \"locale\": \"en_US\",\n  \"queryOptions\": {\n    \"mollit2\": \"<string>\",\n    \"cillumd7\": \"<string>\",\n    \"quis_355\": \"<string>\",\n    \"in_5\": \"<string>\",\n    \"sint55_\": \"<string>\"\n  }\n}","options":{"raw":{"language":"json"}}}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"error\": {\n    \"code\": 400,\n    \"message\": \"UNKNOWN_RECORD_TYPE\",\n    \"details\": {\n      \"exceptionType\": \"DQL-RESULT_TYPE\",\n      \"errorType\": \"UNKNOWN_RECORD_TYPE\",\n      \"errorMessage\": \"Unknown record type: sandwich.\",\n      \"errorMessageFormat\": \"Unknown record type: %s.\",\n      \"errorMessageFormatSpecifierTypes\": [\n        \"RESULT_TYPE\"\n      ],\n      \"arguments\": [\n        \"sandwich\"\n      ],\n      \"queryString\": \"fetch sandwich\",\n      \"syntaxErrorPosition\": {\n        \"start\": {\n          \"index\": 6,\n          \"line\": 1,\n          \"column\": 7\n        },\n        \"end\": {\n          \"index\": 14,\n          \"line\": 1,\n          \"column\": 15\n        }\n      }\n    }\n  }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"0b5451ab-6629-47e1-b0f9-4dabab423d36","name":"An internal server error has occurred.","originalRequest":{"url":{"path":["query:parse"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{"mode":"raw","raw":"{\n  \"query\": \"fetch events \\n| filter event.type == \\\"davis\\\" AND davis.status != \\\"CLOSED\\\" \\n| fields timestamp, davis.title, davis.underMaintenance, davis.status \\n| sort timestamp \\n| limit 10\",\n  \"timezone\": \"UTC\",\n  \"locale\": \"en_US\",\n  \"queryOptions\": {\n    \"mollit2\": \"<string>\",\n    \"cillumd7\": \"<string>\",\n    \"quis_355\": \"<string>\",\n    \"in_5\": \"<string>\",\n    \"sint55_\": \"<string>\"\n  }\n}","options":{"raw":{"language":"json"}}}},"status":"Internal Server Error","code":500,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"error\": {\n    \"code\": 500,\n    \"message\": \"EXECUTION_FAILURE\",\n    \"details\": {\n      \"exceptionType\": \"DQL-EXECUTION\",\n      \"errorType\": \"EXECUTION_FAILURE\",\n      \"errorMessage\": \"NullPointerException\",\n      \"errorMessageFormat\": \"\",\n      \"errorMessageFormatSpecifierTypes\": [],\n      \"arguments\": [],\n      \"queryString\": \"\"\n    }\n  }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[],"protocolProfileBehavior":{"disableBodyPruning":true}},{"id":"57010711-893a-4334-9de1-311b83e056cf","name":"Get a structured list of suggestions for the query at the given position.","request":{"name":"Get a structured list of suggestions for the query at the given position.","description":{"content":"For information about the required permissions see the [Bucket and table permissions in Grail documentation](https://docs.dynatrace.com/docs/shortlink/assign-bucket-table-permissions). \n\n## Overview\n\nWe provide a list of suggestions that may be used after the cursor position. The following queries will all provide the\nsame results:\n\n* `query: \"f\"`\n* `query: \"f\", cursorPosition:1`\n* `query: \"fetch \", cursorPosition:1`\n\nAvailable fields:\n\n| Field       | Description                                                                                                                                                                             |\n|-------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| suggestions | a list of suggestions. Each item is a separate possible suggestion, despite they might have the same outputs.                                                                           |\n| optional    | whether the suggestion is optional. If `true`, the query until the cursor position might work. If `false`, the query is definitely incomplete or invalid if cut at the cursor position. |\n\nFields in the `suggestions`\n\n| Field                  | Description                                                                                                |\n|------------------------|------------------------------------------------------------------------------------------------------------|\n| suggestion             | a string representing the whole suggestion. This information could also be derived from the parts.         |\n| alreadyTypedCharacters | how many characters of this suggestion have already been typed (and will be overridden by the suggestion). |\n| parts                  | a list of semantically enriched information on what are the parts of a suggestion.                         |\n\nFields in `parts`\n\n| Field      | Description                                               |\n|------------|-----------------------------------------------------------|\n| suggestion | a string representing the current part of the suggestion. |\n| type       | current types: SPACE, PIPE, COMMAND (may be extended)     |\n\nThe `type` helps to treat specific parts of the suggestion different to others; either by a different visualization,  \na link to docs, etc.","type":"text/plain"},"url":{"path":["query:autocomplete"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"method":"POST","auth":{"type":"oauth2","oauth2":[{"key":"scope","value":"storage:events:read storage:logs:read storage:metrics:read storage:bizevents:read storage:spans:read storage:system:read storage:entities:read storage:buckets:read storage:fieldsets:read"},{"key":"accessTokenUrl","value":"https://sso.dynatrace.com/sso/oauth2/token"},{"key":"grant_type","value":"client_credentials"}]},"body":{"mode":"raw","raw":"{\n  \"query\": \"<string>\",\n  \"cursorPosition\": \"<integer>\",\n  \"timezone\": \"<string>\",\n  \"locale\": \"<string>\",\n  \"maxDataSuggestions\": \"<integer>\",\n  \"queryOptions\": {\n    \"nostrud5\": \"<string>\",\n    \"cupidatat9\": \"<string>\",\n    \"ex_a0\": \"<string>\",\n    \"adipisicing1\": \"<string>\",\n    \"id_1c6\": \"<string>\",\n    \"amet_06b\": \"<string>\",\n    \"ipsum_55f\": \"<string>\",\n    \"est_40\": \"<string>\",\n    \"Duis_df\": \"<string>\",\n    \"velit3\": \"<string>\",\n    \"nostrud2a\": \"<string>\",\n    \"ullamco_1\": \"<string>\",\n    \"amet8b\": \"<string>\",\n    \"ut7e8\": \"<string>\",\n    \"dolor_a19\": \"<string>\",\n    \"qui_7\": \"<string>\",\n    \"cillum_d3\": \"<string>\",\n    \"Excepteur3\": \"<string>\",\n    \"Lorem_556\": \"<string>\",\n    \"eue\": \"<string>\"\n  }\n}","options":{"raw":{"language":"json"}}}},"response":[{"id":"441881ea-1397-465e-9305-cc4efa1c5a51","name":"A list of structured autocomplete suggestions.","originalRequest":{"url":{"path":["query:autocomplete"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{"mode":"raw","raw":"{\n  \"query\": \"fetch events \\n| filter event.type == \\\"davis\\\" AND davis.status != \\\"CLOSED\\\" \\n| fields timestamp, davis.title, davis.underMaintenance, davis.status \\n| sort timestamp \\n| limit 10\",\n  \"cursorPosition\": \"<integer>\",\n  \"timezone\": \"UTC\",\n  \"locale\": \"en_US\",\n  \"maxDataSuggestions\": \"<integer>\",\n  \"queryOptions\": {\n    \"dolore_26\": \"<string>\",\n    \"sed_a\": \"<string>\",\n    \"ipsum2\": \"<string>\",\n    \"aliqua_4a\": \"<string>\",\n    \"velit_c4\": \"<string>\",\n    \"pariaturea\": \"<string>\",\n    \"Loremabc\": \"<string>\",\n    \"sinte\": \"<string>\",\n    \"culpaa81\": \"<string>\",\n    \"est_6f0\": \"<string>\",\n    \"velit_ba\": \"<string>\",\n    \"ex__4\": \"<string>\",\n    \"commodo_27\": \"<string>\",\n    \"adipisicing2_f\": \"<string>\",\n    \"aliquip98\": \"<string>\",\n    \"sit_708\": \"<string>\",\n    \"et_9\": \"<string>\",\n    \"cupidatat_44\": \"<string>\",\n    \"Ut1\": \"<string>\",\n    \"in8d\": \"<string>\",\n    \"labore_6da\": \"<string>\",\n    \"quia55\": \"<string>\",\n    \"sintf\": \"<string>\",\n    \"sit1\": \"<string>\"\n  }\n}","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"suggestions\": [\n    {\n      \"suggestion\": \"fetch \",\n      \"alreadyTypedCharacters\": 1,\n      \"parts\": [\n        {\n          \"suggestion\": \"fetch\",\n          \"type\": \"COMMAND\"\n        },\n        {\n          \"suggestion\": \" \",\n          \"type\": \"SPACE\"\n        }\n      ]\n    }\n  ],\n  \"optional\": false\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"62ded2fe-a880-4bb9-894c-e9937413a02f","name":"The supplied request is wrong. Either the query itself or other parameters are wrong.","originalRequest":{"url":{"path":["query:autocomplete"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{"mode":"raw","raw":"{\n  \"query\": \"fetch events \\n| filter event.type == \\\"davis\\\" AND davis.status != \\\"CLOSED\\\" \\n| fields timestamp, davis.title, davis.underMaintenance, davis.status \\n| sort timestamp \\n| limit 10\",\n  \"cursorPosition\": \"<integer>\",\n  \"timezone\": \"UTC\",\n  \"locale\": \"en_US\",\n  \"maxDataSuggestions\": \"<integer>\",\n  \"queryOptions\": {\n    \"dolore_26\": \"<string>\",\n    \"sed_a\": \"<string>\",\n    \"ipsum2\": \"<string>\",\n    \"aliqua_4a\": \"<string>\",\n    \"velit_c4\": \"<string>\",\n    \"pariaturea\": \"<string>\",\n    \"Loremabc\": \"<string>\",\n    \"sinte\": \"<string>\",\n    \"culpaa81\": \"<string>\",\n    \"est_6f0\": \"<string>\",\n    \"velit_ba\": \"<string>\",\n    \"ex__4\": \"<string>\",\n    \"commodo_27\": \"<string>\",\n    \"adipisicing2_f\": \"<string>\",\n    \"aliquip98\": \"<string>\",\n    \"sit_708\": \"<string>\",\n    \"et_9\": \"<string>\",\n    \"cupidatat_44\": \"<string>\",\n    \"Ut1\": \"<string>\",\n    \"in8d\": \"<string>\",\n    \"labore_6da\": \"<string>\",\n    \"quia55\": \"<string>\",\n    \"sintf\": \"<string>\",\n    \"sit1\": \"<string>\"\n  }\n}","options":{"raw":{"language":"json"}}}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"error\": {\n    \"code\": 400,\n    \"message\": \"UNKNOWN_RECORD_TYPE\",\n    \"details\": {\n      \"exceptionType\": \"DQL-RESULT_TYPE\",\n      \"errorType\": \"UNKNOWN_RECORD_TYPE\",\n      \"errorMessage\": \"Unknown record type: sandwich.\",\n      \"errorMessageFormat\": \"Unknown record type: %s.\",\n      \"errorMessageFormatSpecifierTypes\": [\n        \"RESULT_TYPE\"\n      ],\n      \"arguments\": [\n        \"sandwich\"\n      ],\n      \"queryString\": \"fetch sandwich\",\n      \"syntaxErrorPosition\": {\n        \"start\": {\n          \"index\": 6,\n          \"line\": 1,\n          \"column\": 7\n        },\n        \"end\": {\n          \"index\": 14,\n          \"line\": 1,\n          \"column\": 15\n        }\n      }\n    }\n  }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"e811dd50-50e0-49d4-a40c-78540f770eaf","name":"An internal server error has occurred.","originalRequest":{"url":{"path":["query:autocomplete"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"description":{"content":"Added as a part of security scheme: oauth2","type":"text/plain"},"key":"Authorization","value":"<token>"}],"method":"POST","body":{"mode":"raw","raw":"{\n  \"query\": \"fetch events \\n| filter event.type == \\\"davis\\\" AND davis.status != \\\"CLOSED\\\" \\n| fields timestamp, davis.title, davis.underMaintenance, davis.status \\n| sort timestamp \\n| limit 10\",\n  \"cursorPosition\": \"<integer>\",\n  \"timezone\": \"UTC\",\n  \"locale\": \"en_US\",\n  \"maxDataSuggestions\": \"<integer>\",\n  \"queryOptions\": {\n    \"dolore_26\": \"<string>\",\n    \"sed_a\": \"<string>\",\n    \"ipsum2\": \"<string>\",\n    \"aliqua_4a\": \"<string>\",\n    \"velit_c4\": \"<string>\",\n    \"pariaturea\": \"<string>\",\n    \"Loremabc\": \"<string>\",\n    \"sinte\": \"<string>\",\n    \"culpaa81\": \"<string>\",\n    \"est_6f0\": \"<string>\",\n    \"velit_ba\": \"<string>\",\n    \"ex__4\": \"<string>\",\n    \"commodo_27\": \"<string>\",\n    \"adipisicing2_f\": \"<string>\",\n    \"aliquip98\": \"<string>\",\n    \"sit_708\": \"<string>\",\n    \"et_9\": \"<string>\",\n    \"cupidatat_44\": \"<string>\",\n    \"Ut1\": \"<string>\",\n    \"in8d\": \"<string>\",\n    \"labore_6da\": \"<string>\",\n    \"quia55\": \"<string>\",\n    \"sintf\": \"<string>\",\n    \"sit1\": \"<string>\"\n  }\n}","options":{"raw":{"language":"json"}}}},"status":"Internal Server Error","code":500,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"error\": {\n    \"code\": 500,\n    \"message\": \"EXECUTION_FAILURE\",\n    \"details\": {\n      \"exceptionType\": \"DQL-EXECUTION\",\n      \"errorType\": \"EXECUTION_FAILURE\",\n      \"errorMessage\": \"NullPointerException\",\n      \"errorMessageFormat\": \"\",\n      \"errorMessageFormatSpecifierTypes\": [],\n      \"arguments\": [],\n      \"queryString\": \"\"\n    }\n  }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[],"protocolProfileBehavior":{"disableBodyPruning":true}}],"event":[],"variable":[{"type":"string","value":"https://ssr94794.apps.dynatrace.com/platform/storage/query/v1","key":"baseUrl"}],"info":{"_postman_id":"cd68ee7e-37ca-47c8-a4a0-8dc7dd49e39b","name":"DQL Query","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json","description":{"content":"Exposes an API to fetch records stored in Grail","type":"text/plain"}}}